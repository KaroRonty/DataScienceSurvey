summary(data_2018$Salary %>% as.numeric())
summary(data$ConvertedComp)
par(mfrow(c = (2, 1)))
par(mfrow(c(2, 1)))
par(mfrow=c(2, 1))
par(mfrow(c = (2, 1)))
plot(data_2017$Salary)
plot(data$ConvertedComp)
par(mfrow=c(2, 1))
par(mfrow=c(1, 2))
plot(data_2017$Salary)
plot(data$ConvertedComp)
data %>%
filter(ConvertedComp < 200000) %>%
tidyr::extract(YearsCode, "YearsCodedNumber", "(\\d+)", convert = TRUE) %>%
pull(YearsCodedNumber) %>%
cor(data %>% filter(ConvertedComp < 200000) %>% pull(ConvertedComp) %>% as.numeric(), use = "pairwise.complete.obs")
plot(data_2017$Salary, ymax = 2000000)
plot(data$ConvertedComp, ymax = 2000000)
plot(data_2017$Salary, xlim = (0, 2000000))
plot(data$ConvertedComp, xlim = (0, 2000000))
plot(data_2017$Salary, xlim = c(0, 2000000))
plot(data$ConvertedComp, xlim = c(0, 2000000))
plot(data_2017$Salary, xlim = c(2000000, 0))
plot(data$ConvertedComp, xlim = c(2000000, 0))
plot(data_2017$Salary, ylim = (0, 2000000))
plot(data$ConvertedComp, ylim = (0, 2000000))
plot(data_2017$Salary, ylim = c(0, 2000000))
plot(data$ConvertedComp, ylim = c(0, 2000000))
table(data$ConvertedComp)
table(data$ConvertedComp) %>% sort()
table(data$ConvertedComp) %>% sort(decreasing = TRUE)
par(mfrow=c(1,1))
hist(data$ConvertedComp, breaks = 100)
data %>% filter(ConvertedComp %in% c(1e6, 2e6))
data %>% filter(ConvertedComp %in% c(1e6, 2e6)) %>% fix()
l %>% summary()
cor(t4$ConvertedComp, pred)^2
set.seed(2)
split <- regression %>%
filter(ConvertedComp < 200000) %>%
# model.matrix(1 ~ ., data = .) %>%
sample_frac()
training <- split %>%
slice(1:(nrow(split) * 0.7))
test <- split %>%
slice((nrow(split) * 0.7 + 1):nrow(split))
t1 <- model.matrix(ConvertedComp ~ .,
data = training)
t2 <- model.matrix(ConvertedComp ~ .,
data = test)
setdiff(colnames(t2), colnames(t1))
setdiff(colnames(t1), colnames(t2))
t3 <- cbind(ConvertedComp = training$ConvertedComp, t1) %>%
as.data.frame()
t4 <- cbind(ConvertedComp = test$ConvertedComp, t2) %>%
as.data.frame()
l <- lm(ConvertedComp ~ .,
data = t3)
pred <- predict(l, newdata = t4)
cor(t4$ConvertedComp, pred)^2
l %>% summary()
library(lme4)
mixed <- lmer(ConvertedComp ~
1 +
Country +
(1|Country) +
R +
Python +
R_and_Python +
N_languages +
MainBranch +
Hobbyist +
Employment +
Student +
EdLevelBSc +
EdLevelMSc +
EdLevelLower +
EdLevelHigher +
UndergradMajorCompSci +
UndergradMajorMathsStats +
UndergradMajorBusiness +
OrgSize +
YearsCode +
Less_than_one_years_code +
More_than_50_years_code +
YearsCodePro +
WorkWeekHrs +
Age +
GenderMale,
data = training)
pred <- predict(mixed, newdata = test, allow.new.levels = TRUE)
cor(test$ConvertedComp, pred, use = "pairwise.complete.obs")^2
t3 <- cbind(ConvertedComp = training$ConvertedComp, t1) %>%
as.data.frame()
write.csv(cor(t3), "corr.csv")
shell.exec("corr.csv")
save.image("C:/Users/karo/Google Drive/NHH/THESIS/lm_working_custom.RData")
t3$R %>% summary
t3$Python %>% summary
l %>% summary()
l %>% summary
dim(t1)
dim(t2)
dim(t3)
dim(t4)
clean2 <- data %>%
filter(str_detect(DevType, ";Data scientist|Data scientist"),
str_detect(MainBranch, "I am a developer by profession|not primarily"),
str_detect(Employment, "full-time|Independent"),
!is.na(ConvertedComp),
ConvertedComp > 0,
ConvertedComp < 1e6)
dim(clean)
dim(clean2)
cor(data$ConvertedComp, data$YearsCodePro %>% as.numeric(), use = "pairwise.complete.obs")
l %>% summary()
data %>% nroww()
data %>% nrow()
pred <- predict(mixed, newdata = test, allow.new.levels = TRUE)
cor(test$ConvertedComp, pred, use = "pairwise.complete.obs")^2
l <- lm(ConvertedComp ~ .,
data = t3)
pred <- predict(l, newdata = t4)
cor(t4$ConvertedComp, pred)^2
nrow(t4)
prepared_data$DeveloperType %>% unique
dim(prepared_data)
savehistory("C:/Users/karo/Google Drive/NHH/THESIS/history.Rhistory")
save.image("C:/Users/karo/Google Drive/NHH/THESIS/history.RData")
library(fpp2)
install.packages("fpp2")
library(fpp2)
library(fpp2)
data("a10")
View(a10)
plot(a10)
data(a10)
library(dplyr)
training <- a10 %>%
slice(1:(nrow(a10) * 0.8))
training <- a10[0:(nrow(a10) * 0.8)]
training <- a10[0:(length(a10) * 0.8)]
test <- a10[(length(a10) * 0.8 + 1):nrow(a10)]
test <- a10[(length(a10) * 0.8 + 1):length(a10)]
stl(training)
library(fpp2)
training <- a10[0:(length(a10) * 0.8)] %>%
ts(start = c(1981, 1), frequency = 4)
a10 <- ts(a10, start = c(1981, 1), frequency = 4)
training <- a10[0:(length(a10) * 0.8)]
test <- a10[(length(a10) * 0.8 + 1):length(a10)]
stl(training)
str(a10)
a10 <- ts(a10, start = c(1981, 1), end = (2012, 3))
data("a10")
a10 <- ts(a10, start = c(1981, 1), end = c(2012, 3))
str(a10)
a10 <- ts(a10, start = c(1981, 1), end = c(2012, 3), frequency = 4)
str(a10)
training <- a10[0:(length(a10) * 0.8)]
test <- a10[(length(a10) * 0.8 + 1):length(a10)]
stl(training)
data("a10")
class(a10)
str(a10)
training <- a10[0:(length(a10) * 0.8)]
test <- a10[(length(a10) * 0.8 + 1):length(a10)]
stl(training)
data("ausbeer")
training <- ausbeer[0:(length(ausbeer) * 0.8)]
test <- ausbeer[(length(ausbeer) * 0.8 + 1):length(ausbeer)]
stl(training)
autoplot(ausbeer)
stl(ausbeer)
stl(ausbeer, s.window = 4)
training <- window(ausbeer, end = c(2000, 1))
stl(training)
data("a10")
training <- window(a10, end = c(2004, 12))
test <- window(a10, start = c(2005, 1))
stl(training, s.window = "periodic")
stl(training, s.window = "periodic") %>%
plot()
training %>% autoplot()
time(training)
t <- time(training)
break1 <- 1997
break2 <- 2002
tb1 <- ts(pmax(0, t - break1), start = c(2004, 12))
tb2 <- ts(pmax(0, t - break2), start = c(2004, 12))
tb1
fit.spline <- tslm(training ~ t + I(t^2) + I(t^3) +
I(tb1^3) + I(tb2^3))
fcasts.spl <- forecast(fit.spline, newdata = test)
fcasts.spl <- forecast(fit.spline, newdata = training)
fit.spline <- tslm(training ~ ns(t, df = 3)
fit.spline <- tslm(training ~ ns(t, df = 3))
fit.spline <- tslm(training ~ ns(t, df = 3))
library(splines)
fit.spline <- tslm(training ~ ns(t, df = 3))
data("marathon")
t.break1 <- 1940
t.break2 <- 1980
t <- time(marathon)
t1 <- ts(pmax(0, t-t.break1), start=1897)
t2 <- ts(pmax(0, t-t.break2), start=1897)
fit.pw <- tslm(marathon ~ t + t1 + t2)
t.new <- t[length(t)] + seq(10)
t1.new <- t1[length(t1)] + seq(10)
t2.new <- t2[length(t2)] + seq(10)
newdata <- cbind(t=t.new, t1=t1.new, t2=t2.new) %>%
as.data.frame
fcasts.pw <- forecast(fit.pw, newdata = newdata)
fcasts.pw
t.break1 <- 1940
t.break2 <- 1980
t <- time(training)
t1 <- ts(pmax(0, t - t.break1), start = 1897)
t2 <- ts(pmax(0, t - t.break2), start = 1897)
fit.pw <- tslm(training ~ t + t1 + t2)
t.new <- t[length(t)] + seq(10)
t1.new <- t1[length(t1)] + seq(10)
t2.new <- t2[length(t2)] + seq(10)
newdata <- cbind(t = t.new, t1 = t1.new, t2 = t2.new) %>%
as.data.frame()
fcasts.pw <- forecast(fit.pw, newdata = newdata)
fcasts.pw
fcasts.pw %>% autoplot()
fit.splines <- lm(marathon ~ ns(t, df=6))
rm(t)
fit.splines <- lm(marathon ~ ns(t, df=6))
h <- 10
fit.lin <- tslm(marathon ~ trend)
fcasts.lin <- forecast(fit.lin, h = h)
fit.exp <- tslm(marathon ~ trend, lambda = 0)
fcasts.exp <- forecast(fit.exp, h = h)
t <- time(marathon)
t.break1 <- 1940
t.break2 <- 1980
tb1 <- ts(pmax(0, t - t.break1), start = 1897)
tb2 <- ts(pmax(0, t - t.break2), start = 1897)
fit.pw <- tslm(marathon ~ t + tb1 + tb2)
t.new <- t[length(t)] + seq(h)
tb1.new <- tb1[length(tb1)] + seq(h)
tb2.new <- tb2[length(tb2)] + seq(h)
newdata <- cbind(t=t.new, tb1=tb1.new, tb2=tb2.new) %>%
as.data.frame()
fcasts.pw <- forecast(fit.pw, newdata = newdata)
fit.spline <- tslm(marathon ~ t + I(t^2) + I(t^3) +
I(tb1^3) + I(tb2^3))
fcasts.spl <- forecast(fit.spline, newdata = newdata)
fcasts.spl
t <- time(training)
t.break1 <- 1997
t.break2 <- 2002
tb1 <- ts(pmax(0, t - t.break1), start = c(2004, 12))
tb2 <- ts(pmax(0, t - t.break2), start = c(2004, 12))
fit.pw <- tslm(training ~ t + tb1 + tb2)
t.new <- t[length(t)] + seq(h)
tb1.new <- tb1[length(tb1)] + seq(h)
tb2.new <- tb2[length(tb2)] + seq(h)
newdata <- cbind(t=t.new, tb1=tb1.new, tb2=tb2.new) %>%
as.data.frame()
fcasts.pw <- forecast(fit.pw, newdata = newdata)
fit.spline <- tslm(marathon ~ t + I(t^2) + I(t^3) +
I(tb1^3) + I(tb2^3))
fcasts.spl <- forecast(fit.spline, newdata = newdata)
fit.spline <- tslm(training ~ t + I(t^2) + I(t^3) +
I(tb1^3) + I(tb2^3))
fcasts.spl <- forecast(fit.spline, newdata = newdata)
fcasts.spl
autoplot(training) +
autolayer(fcasts.spl)
autoplot(training)
autoplot(training) +
autolayer(fitted(fcasts.spl))
autoplot(training) +
autolayer(fcasts.spl)
training %>% autoplot()
tb1 <- ts(pmax(0, t - t.break1), start = c(1985, 1))
tb2 <- ts(pmax(0, t - t.break2), start = c(1985, 1))
fit.pw <- tslm(training ~ t + tb1 + tb2)
t.new <- t[length(t)] + seq(h)
tb1.new <- tb1[length(tb1)] + seq(h)
tb2.new <- tb2[length(tb2)] + seq(h)
newdata <- cbind(t = t.new, tb1 = tb1.new, tb2 = tb2.new) %>%
as.data.frame()
fcasts.pw <- forecast(fit.pw, newdata = newdata)
fit.spline <- tslm(training ~ t + I(t ^ 2) + I(t ^ 3) +
I(tb1 ^ 3) + I(tb2 ^ 3))
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fitted(fcasts.spl))
autoplot(training) +
autolayer(fcasts.spl)
t <- time(training)
t.break1 <- 1997
t.break2 <- 2002
tb1 <- ts(pmax(0, t - t.break1), start = c(1985, 1))
tb2 <- ts(pmax(0, t - t.break2), start = c(1985, 1))
fit.pw <- tslm(training ~ t + tb1 + tb2)
t.new <- t[length(t)] + seq(h)
tb1.new <- tb1[length(tb1)] + seq(h)
tb2.new <- tb2[length(tb2)] + seq(h)
newdata <- cbind(t = t.new, tb1 = tb1.new, tb2 = tb2.new) %>%
as.data.frame()
fcasts.pw <- forecast(fit.pw, newdata = newdata)
fit.spline <- tslm(training ~ t + I(t ^ 2) + I(t ^ 3) +
I(tb1 ^ 3) + I(tb2 ^ 3))
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl)
fit.spline <- tslm(training ~ season + t + I(t ^ 2) + I(t ^ 3) +
I(tb1 ^ 3) + I(tb2 ^ 3))
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl)
autoplot(fcasts.spl)
autoplot(fcasts.spl)
fit.spline
fit.spline %>% summary()
fit.spline <- tslm(training ~ season + t + I(t ^ 2) + I(t ^ 3) +
I(tb1 ^ 2) + I(tb2 ^ 2))
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl)
fit.spline <- tslm(training ~ season + t + I(t ^ 2) + I(t ^ 3) +
tb1 + tb2)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl)
fit.spline <- tslm(training ~ season + t + tb1 + tb2)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
h
h <- length(test)
h
h <- length(test)
t <- time(training)
t.break1 <- 1997
t.break2 <- 2002
tb1 <- ts(pmax(0, t - t.break1), start = c(1985, 1))
tb2 <- ts(pmax(0, t - t.break2), start = c(1985, 1))
t.new <- t[length(t)] + seq(h)
tb1.new <- tb1[length(tb1)] + seq(h)
tb2.new <- tb2[length(tb2)] + seq(h)
newdata <- cbind(t = t.new, tb1 = tb1.new, tb2 = tb2.new) %>%
as.data.frame()
fit.spline <- tslm(training ~ season + t + tb1 + tb2)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
tb1 <- ts(pmax(0, t - t.break1), start = c(1997, 1))
tb2 <- ts(pmax(0, t - t.break2), start = c(2002, 1))
t.new <- t[length(t)] + seq(h)
tb1.new <- tb1[length(tb1)] + seq(h)
tb2.new <- tb2[length(tb2)] + seq(h)
newdata <- cbind(t = t.new, tb1 = tb1.new, tb2 = tb2.new) %>%
as.data.frame()
fit.spline <- tslm(training ~ season + t + tb1 + tb2)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
t
t.new
tb1.new
tb2.new
library(fpp2)
library(dplyr)
data("a10")
training <- window(a10, end = c(2004, 12))
test <- window(a10, start = c(2005, 1))
training %>% autoplot()
stl(training, s.window = "periodic") %>%
plot()
h <- length(test)
t <- time(training)
t.break1 <- 1997
t.break2 <- 2002
tb1 <- ts(pmax(0, t - t.break1), start = c(1985, 1))
tb2 <- ts(pmax(0, t - t.break2), start = c(1985, 1))
t.new <- t[length(t)] + seq(h)
tb1.new <- tb1[length(tb1)] + seq(h)
tb2.new <- tb2[length(tb2)] + seq(h)
newdata <- cbind(t = t.new, tb1 = tb1.new, tb2 = tb2.new) %>%
as.data.frame()
fit.spline <- tslm(training ~ season + t + tb1 + tb2)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
fit.spline <- tslm(training ~ season + tb1 + tb2)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
fit.spline <- tslm(training ~ season + t )
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
fit.spline <- tslm(training ~ season)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
t <- time(a10)
t.break1 <- 1997
t.break2 <- 2002
tb1 <- ts(pmax(0, t - t.break1), start = c(1985, 1))
tb2 <- ts(pmax(0, t - t.break2), start = c(1985, 1))
t.new <- t[length(t)] + seq(h)
tb1.new <- tb1[length(tb1)] + seq(h)
tb2.new <- tb2[length(tb2)] + seq(h)
newdata <- cbind(t = t.new, tb1 = tb1.new, tb2 = tb2.new) %>%
as.data.frame()
fit.spline <- tslm(training ~ season + t + tb1 + tb2)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
h <- length(test)
t <- time(training)
t.break1 <- 1997
t.break2 <- 2002
tb1 <- ts(pmax(0, t - t.break1), start = c(1985, 1))
tb2 <- ts(pmax(0, t - t.break2), start = c(1985, 1))
t.new <- t[length(t)] + seq(h)
tb1.new <- tb1[length(tb1)] + seq(h)
tb2.new <- tb2[length(tb2)] + seq(h)
newdata <- cbind(t = t.new, tb1 = tb1.new, tb2 = tb2.new) %>%
as.data.frame()
fit.spline <- tslm(training ~ season + t + tb1 + tb2)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
library(fpp2)
library(dplyr)
data("a10")
training <- window(a10, end = c(2004, 12))
test <- window(a10, start = c(2005, 1))
training %>% autoplot()
stl(training, s.window = "periodic") %>%
plot()
h <- length(test)
t <- time(training)
t.break1 <- 1997
t.break2 <- 2002
tb1 <- ts(pmax(0, t - t.break1), start = c(1985, 1))
tb2 <- ts(pmax(0, t - t.break2), start = c(1985, 1))
t.new <- t[length(t)] + seq(h)
tb1.new <- tb1[length(tb1)] + seq(h)
tb2.new <- tb2[length(tb2)] + seq(h)
newdata <- cbind(t = t.new, tb1 = tb1.new, tb2 = tb2.new) %>%
as.data.frame()
fit.spline <- tslm(training ~ season + t + tb1 + tb2)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
tb2
t
fit.spline <- tslm(training ~ season + t)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
t
fit.spline <- tslm(training ~ t)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
fit.spline <- tslm(training)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
fit.spline <- tslm(training ~ season)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
fit.spline <- tslm(training ~ season + tb1 + tb2)
fcasts.spl <- forecast(fit.spline, newdata = newdata)
autoplot(training) +
autolayer(fcasts.spl) +
autolayer(test)
tic <- Sys.time()
source("EDA.R")
source("Modeling.R")
source("Model_plotting.R")
source("SOM_modeling.R")
(toc <- Sys.time() - tic)
source("EDA.R")
setwd(choose.dir())
file.choose()
setwd("C:\\Users\\karo\\Google Drive\\R\\DataScienceSurvey\\")
tic <- Sys.time()
source("EDA.R")
source("Modeling.R")
source("Model_plotting.R")
source("SOM_modeling.R")
(toc <- Sys.time() - tic)
